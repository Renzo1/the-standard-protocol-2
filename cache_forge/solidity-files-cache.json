{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "contracts",
    "tests": "test/foundry",
    "scripts": "script",
    "libraries": [
      "lib",
      "node_modules"
    ]
  },
  "files": {
    "contracts/LiquidationPool.sol": {
      "lastModificationDate": 1703690163982,
      "contentHash": "19c13bc24444446c31f72e88d7e50e5f",
      "sourceName": "contracts/LiquidationPool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\ILiquidationPool.sol",
        "contracts\\interfaces\\ILiquidationPoolManager.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "LiquidationPool": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "LiquidationPool.sol\\LiquidationPool.json"
        }
      }
    },
    "contracts/LiquidationPoolManager.sol": {
      "lastModificationDate": 1703690163982,
      "contentHash": "dcd3b5c18b5ee48d90b2f32dba72d881",
      "sourceName": "contracts/LiquidationPoolManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\LiquidationPool.sol",
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\ILiquidationPool.sol",
        "contracts\\interfaces\\ILiquidationPoolManager.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "LiquidationPoolManager": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "LiquidationPoolManager.sol\\LiquidationPoolManager.json"
        }
      }
    },
    "contracts/MockSmartVaultManagerV5.sol": {
      "lastModificationDate": 1704062921467,
      "contentHash": "53fcd2ff37132b69494a65a070cb1b07",
      "sourceName": "contracts/MockSmartVaultManagerV5.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\INFTMetadataGenerator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultDeployer.sol",
        "contracts\\interfaces\\ISmartVaultIndex.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "MockSmartVaultManagerV5": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "MockSmartVaultManagerV5.sol\\MockSmartVaultManagerV5.json"
        }
      }
    },
    "contracts/SmartVaultManagerV5.sol": {
      "lastModificationDate": 1703690163982,
      "contentHash": "875ca5a7af81f63d0fe381caa0ea54ed",
      "sourceName": "contracts/SmartVaultManagerV5.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\INFTMetadataGenerator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultDeployer.sol",
        "contracts\\interfaces\\ISmartVaultIndex.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "SmartVaultManagerV5": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SmartVaultManagerV5.sol\\SmartVaultManagerV5.json"
        }
      }
    },
    "contracts/SmartVaultV3.sol": {
      "lastModificationDate": 1704324123271,
      "contentHash": "8ec82d8dad390179356b0d67853eeba2",
      "sourceName": "contracts/SmartVaultV3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\IPriceCalculator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ISmartVaultManagerV3.sol",
        "contracts\\interfaces\\ISwapRouter.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "contracts\\interfaces\\IWETH.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "SmartVaultV3": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SmartVaultV3.sol\\SmartVaultV3.json"
        }
      }
    },
    "contracts/interfaces/IEUROs.sol": {
      "lastModificationDate": 1703690163983,
      "contentHash": "687657adc07206dfc6df3fb7e4059f2e",
      "sourceName": "contracts/interfaces/IEUROs.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "IEUROs": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IEUROs.sol\\IEUROs.json"
        }
      }
    },
    "contracts/interfaces/ILiquidationPool.sol": {
      "lastModificationDate": 1703690163983,
      "contentHash": "a967e9072fa3a5186fdf2f83057543ad",
      "sourceName": "contracts/interfaces/ILiquidationPool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "ILiquidationPool": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ILiquidationPool.sol\\ILiquidationPool.json"
        }
      }
    },
    "contracts/interfaces/ILiquidationPoolManager.sol": {
      "lastModificationDate": 1703989306836,
      "contentHash": "9e31faf4280f09f6f7c90cbd28912846",
      "sourceName": "contracts/interfaces/ILiquidationPoolManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ITokenManager.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "ILiquidationPoolManager": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ILiquidationPoolManager.sol\\ILiquidationPoolManager.json"
        }
      }
    },
    "contracts/interfaces/INFTMetadataGenerator.sol": {
      "lastModificationDate": 1703690163984,
      "contentHash": "e20c3253e2169cf17f7b2cda6340173b",
      "sourceName": "contracts/interfaces/INFTMetadataGenerator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ITokenManager.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "INFTMetadataGenerator": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "INFTMetadataGenerator.sol\\INFTMetadataGenerator.json"
        }
      }
    },
    "contracts/interfaces/IPriceCalculator.sol": {
      "lastModificationDate": 1703690163984,
      "contentHash": "2705886dcad10fbf635547a8e5e5a5fb",
      "sourceName": "contracts/interfaces/IPriceCalculator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ITokenManager.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "IPriceCalculator": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IPriceCalculator.sol\\IPriceCalculator.json"
        }
      }
    },
    "contracts/interfaces/ISmartVault.sol": {
      "lastModificationDate": 1703690163984,
      "contentHash": "594e44800546a83971e1b510f400c593",
      "sourceName": "contracts/interfaces/ISmartVault.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ITokenManager.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ISmartVault": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISmartVault.sol\\ISmartVault.json"
        }
      }
    },
    "contracts/interfaces/ISmartVaultDeployer.sol": {
      "lastModificationDate": 1703690163985,
      "contentHash": "b41d8c5a550013f04d86e1e8e993e397",
      "sourceName": "contracts/interfaces/ISmartVaultDeployer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ISmartVaultDeployer": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISmartVaultDeployer.sol\\ISmartVaultDeployer.json"
        }
      }
    },
    "contracts/interfaces/ISmartVaultIndex.sol": {
      "lastModificationDate": 1704162070744,
      "contentHash": "0c702fa1ceaa0775128c31cfead37e73",
      "sourceName": "contracts/interfaces/ISmartVaultIndex.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ISmartVaultIndex": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISmartVaultIndex.sol\\ISmartVaultIndex.json"
        }
      }
    },
    "contracts/interfaces/ISmartVaultManager.sol": {
      "lastModificationDate": 1703690163985,
      "contentHash": "b0bebfbc8179e89eda8a64bf0f1f1165",
      "sourceName": "contracts/interfaces/ISmartVaultManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ISmartVaultManager": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISmartVaultManager.sol\\ISmartVaultManager.json"
        }
      }
    },
    "contracts/interfaces/ISmartVaultManagerV2.sol": {
      "lastModificationDate": 1703690163985,
      "contentHash": "aed5109c940d49b0a305117a9870e8e7",
      "sourceName": "contracts/interfaces/ISmartVaultManagerV2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ISmartVaultManagerV2": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISmartVaultManagerV2.sol\\ISmartVaultManagerV2.json"
        }
      }
    },
    "contracts/interfaces/ISmartVaultManagerV3.sol": {
      "lastModificationDate": 1703690163985,
      "contentHash": "07f5f375620f371f4ab6179116d14e13",
      "sourceName": "contracts/interfaces/ISmartVaultManagerV3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ISmartVaultManagerV3": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISmartVaultManagerV3.sol\\ISmartVaultManagerV3.json"
        }
      }
    },
    "contracts/interfaces/ISwapRouter.sol": {
      "lastModificationDate": 1703690163986,
      "contentHash": "377bc15d83a75bdfd20b4aee6d89277a",
      "sourceName": "contracts/interfaces/ISwapRouter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ISwapRouter": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISwapRouter.sol\\ISwapRouter.json"
        }
      }
    },
    "contracts/interfaces/ITokenManager.sol": {
      "lastModificationDate": 1704060502945,
      "contentHash": "17217df439baf0c9c888532585f2191c",
      "sourceName": "contracts/interfaces/ITokenManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ITokenManager": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ITokenManager.sol\\ITokenManager.json"
        }
      }
    },
    "contracts/interfaces/IWETH.sol": {
      "lastModificationDate": 1703690163986,
      "contentHash": "308323efa5bc2e9bf03e98089d3e1b15",
      "sourceName": "contracts/interfaces/IWETH.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "IWETH": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IWETH.sol\\IWETH.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1703712431787,
      "contentHash": "2df678a5b2611e0d7bc9ef6745d19157",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "test.sol\\DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1703712418581,
      "contentHash": "ac34dc048311bd400c5c5351e7975438",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Base.sol\\CommonBase.json"
        },
        "ScriptBase": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Base.sol\\ScriptBase.json"
        },
        "TestBase": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Base.sol\\TestBase.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1703712418582,
      "contentHash": "d136ed3be15b16e8875196a38f225c2f",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdAssertions.sol\\StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1703712418583,
      "contentHash": "a72d4e3220a1c9ec2137746eebcaecb8",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdChains.sol\\StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1703712418583,
      "contentHash": "2ffbad9275b4543eb1a17010e9dff279",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdCheats.sol\\StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdCheats.sol\\StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1703712418583,
      "contentHash": "8c35ad419c5b8748575080db5fd58cae",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdError.sol\\stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1703712418590,
      "contentHash": "2e3254214dc16cfad6b77e4d75bc678f",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdInvariant.sol\\StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1703712418590,
      "contentHash": "13cab508e6a2e164c481432248261590",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdJson.sol\\stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1703712418590,
      "contentHash": "fc64b149e462e64dea89f50e9cc0318f",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdMath.sol\\stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1703712418591,
      "contentHash": "023abcd479ed36f04ac72d8bd9bdaa7a",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdStorage.sol\\stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdStorage.sol\\stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1703712418591,
      "contentHash": "f5cb431eb5bd89ef37aaf831fc099459",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdStyle.sol\\StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1703712418592,
      "contentHash": "25124f4c527aaa5248fc213236de55e8",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StdUtils.sol\\StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1703712418592,
      "contentHash": "7efdfd19fef655d8a6bca92dc3c00415",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Test.sol\\Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1703712431876,
      "contentHash": "e948a673792300ac0e78fcf84d051917",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Vm.sol\\Vm.json"
        },
        "VmSafe": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Vm.sol\\VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1703712418593,
      "contentHash": "c8cf989d04bc2e3069e3d91facf3b69c",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "console.sol\\console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1703712418594,
      "contentHash": "84bf7223a45eb5be69eae69a26531306",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "console2.sol\\console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1703712418596,
      "contentHash": "5de707a0d82c8f56049fbd3ba28944ed",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IMulticall3.sol\\IMulticall3.json"
        }
      }
    },
    "lib/forge-std/src/mocks/MockERC20.sol": {
      "lastModificationDate": 1703712418596,
      "contentHash": "26beb59eac7137fba19ace493ea445b4",
      "sourceName": "lib/forge-std/src/mocks/MockERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "MockERC20": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "MockERC20.sol\\MockERC20.json"
        }
      }
    },
    "lib/forge-std/src/mocks/MockERC721.sol": {
      "lastModificationDate": 1703712418596,
      "contentHash": "9ac460493eca5357ce4dfbe58c104d02",
      "sourceName": "lib/forge-std/src/mocks/MockERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IERC721TokenReceiver": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "MockERC721.sol\\IERC721TokenReceiver.json"
        },
        "MockERC721": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "MockERC721.sol\\MockERC721.json"
        }
      }
    },
    "lib/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1703712418598,
      "contentHash": "b78b3af4008494f560706b3e44286080",
      "sourceName": "lib/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "safeconsole.sol\\safeconsole.json"
        }
      }
    },
    "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
      "lastModificationDate": 1703711987962,
      "contentHash": "d9654a0fc044a31d4106ee6bca772add",
      "sourceName": "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AggregatorV3Interface": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "AggregatorV3Interface.sol\\AggregatorV3Interface.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
      "lastModificationDate": 1703711985352,
      "contentHash": "a2b1ec38a8dad325a596f926890772b8",
      "sourceName": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControl": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "AccessControl.sol\\AccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1703711987369,
      "contentHash": "57c84298234411cea19c7c284d86be8b",
      "sourceName": "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IAccessControl.sol\\IAccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "lastModificationDate": 1703711987702,
      "contentHash": "5a20b2cad87ddb61c7a3a6af21289e28",
      "sourceName": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Ownable.sol\\Ownable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1703711986837,
      "contentHash": "3ae5166c6827a9cf1a7a462d1632b464",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ERC20.sol\\ERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1703711987521,
      "contentHash": "df36f7051335cd1e748b1b6463b7fdd3",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC20.sol\\IERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1703711987527,
      "contentHash": "909ab67fc5c25033fe6cd364f8c056f9",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Metadata": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC20Metadata.sol\\IERC20Metadata.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
      "lastModificationDate": 1703711987531,
      "contentHash": "525fcdad8d171312933f47baf01d1ed8",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Permit": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC20Permit.sol\\IERC20Permit.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1703711987761,
      "contentHash": "1b5d667d3740d866eca0352758e59827",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SafeERC20.sol\\SafeERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "lastModificationDate": 1703711985398,
      "contentHash": "211ffd288c1588ba8c10eae668ca3c66",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Address.sol\\Address.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "lastModificationDate": 1703711985467,
      "contentHash": "f07feb4a44b1a4872370da5aa70e8e46",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Context.sol\\Context.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "lastModificationDate": 1703711987787,
      "contentHash": "48686fc32a22a3754b8e63321857dd2a",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Strings.sol\\Strings.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1703711986778,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ERC165.sol\\ERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1703711987504,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC165.sol\\IERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1703711987680,
      "contentHash": "fe63409d8a06818b926cf89e0ea88b1b",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Math.sol\\Math.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1703711987776,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SignedMath.sol\\SignedMath.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
      "lastModificationDate": 1703711987712,
      "contentHash": "a70d53f7e468306c02c529ecaa1d59c5",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "OwnableUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "OwnableUpgradeable.sol\\OwnableUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1703711987643,
      "contentHash": "b0970a564d121abf9adfff8d1a01eb16",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Initializable.sol\\Initializable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol": {
      "lastModificationDate": 1703711987212,
      "contentHash": "cf4ee017d1c233e20dc46b40c0f570c1",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721Upgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ERC721Upgradeable.sol\\ERC721Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol": {
      "lastModificationDate": 1703711987590,
      "contentHash": "ba28cf60b52b00d2b3a190bcdf0952bd",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721ReceiverUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC721ReceiverUpgradeable.sol\\IERC721ReceiverUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
      "lastModificationDate": 1703711987597,
      "contentHash": "f6c6e71ba8413a4ba32871610dba0658",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Upgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC721Upgradeable.sol\\IERC721Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
      "lastModificationDate": 1703711987584,
      "contentHash": "76212ca0265501d1eb3dd1175e6afca4",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721MetadataUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC721MetadataUpgradeable.sol\\IERC721MetadataUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
      "lastModificationDate": 1703711985352,
      "contentHash": "c30c805386fda8a42ff515da963d3a95",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "AddressUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "AddressUpgradeable.sol\\AddressUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1703711985422,
      "contentHash": "b6dfb72ff1fd764f725ec4db364b1b20",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ContextUpgradeable.sol\\ContextUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
      "lastModificationDate": 1703711987779,
      "contentHash": "c221361be1c4953f5b71f47475b90266",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StringsUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "StringsUpgradeable.sol\\StringsUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
      "lastModificationDate": 1703711986779,
      "contentHash": "7cd9c9d1dccf4a894c0f6926f5b6ac3d",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165Upgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ERC165Upgradeable.sol\\ERC165Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
      "lastModificationDate": 1703711987508,
      "contentHash": "d6ecf203a5e72c845be9bbf2f304a289",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165Upgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC165Upgradeable.sol\\IERC165Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
      "lastModificationDate": 1703711987681,
      "contentHash": "5a2a749b45b6a8eb035f4bf75addcb27",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MathUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "MathUpgradeable.sol\\MathUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
      "lastModificationDate": 1703711987767,
      "contentHash": "2a6b819b2e241091ada6d645df3e3929",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMathUpgradeable": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SignedMathUpgradeable.sol\\SignedMathUpgradeable.json"
        }
      }
    },
    "test/foundry/Handler.t.sol": {
      "lastModificationDate": 1704316912851,
      "contentHash": "5cec055712169d4b56e377ae2438b777",
      "sourceName": "test/foundry/Handler.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\LiquidationPool.sol",
        "contracts\\LiquidationPoolManager.sol",
        "contracts\\MockSmartVaultManagerV5.sol",
        "contracts\\SmartVaultV3.sol",
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\ILiquidationPool.sol",
        "contracts\\interfaces\\ILiquidationPoolManager.sol",
        "contracts\\interfaces\\INFTMetadataGenerator.sol",
        "contracts\\interfaces\\IPriceCalculator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultDeployer.sol",
        "contracts\\interfaces\\ISmartVaultIndex.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ISmartVaultManagerV3.sol",
        "contracts\\interfaces\\ISwapRouter.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "contracts\\interfaces\\IWETH.sol",
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src\\Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src\\StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src\\StdUtils.sol",
        "lib/forge-std/src\\Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src\\console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
        "test/foundry\\TSBuilder.t.sol",
        "test/foundry\\interfaces\\AggregatorV3InterfaceForTest.sol",
        "test/foundry\\interfaces\\IERC20Mock.sol",
        "test/foundry\\interfaces\\ILiquidationPool.sol",
        "test/foundry\\interfaces\\ILiquidationPoolManager.sol",
        "test/foundry\\interfaces\\ISmartVault.sol",
        "test/foundry\\interfaces\\ISmartVaultManagerV5.sol",
        "utils/ChainlinkMockForTest.sol",
        "utils/ERC20Mock.sol",
        "utils/EUROsMock.sol",
        "utils/PriceCalculator.sol",
        "utils/SmartVaultDeployerV3.sol",
        "utils/SmartVaultIndex.sol",
        "utils/TokenManagerMock.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "Handler": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "Handler.t.sol\\Handler.json"
        }
      }
    },
    "test/foundry/InvariantTests.t.sol": {
      "lastModificationDate": 1704167289907,
      "contentHash": "db5b588fc923c029c6ae7e6ebbf17e78",
      "sourceName": "test/foundry/InvariantTests.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\LiquidationPool.sol",
        "contracts\\LiquidationPoolManager.sol",
        "contracts\\MockSmartVaultManagerV5.sol",
        "contracts\\SmartVaultV3.sol",
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\ILiquidationPool.sol",
        "contracts\\interfaces\\ILiquidationPoolManager.sol",
        "contracts\\interfaces\\INFTMetadataGenerator.sol",
        "contracts\\interfaces\\IPriceCalculator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultDeployer.sol",
        "contracts\\interfaces\\ISmartVaultIndex.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ISmartVaultManagerV3.sol",
        "contracts\\interfaces\\ISwapRouter.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "contracts\\interfaces\\IWETH.sol",
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src\\Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src\\StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src\\StdUtils.sol",
        "lib/forge-std/src\\Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src\\console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
        "test/foundry\\Handler.t.sol",
        "test/foundry\\TSBuilder.t.sol",
        "test/foundry\\interfaces\\AggregatorV3InterfaceForTest.sol",
        "test/foundry\\interfaces\\IERC20Mock.sol",
        "test/foundry\\interfaces\\ILiquidationPool.sol",
        "test/foundry\\interfaces\\ILiquidationPoolManager.sol",
        "test/foundry\\interfaces\\ISmartVault.sol",
        "test/foundry\\interfaces\\ISmartVaultManagerV5.sol",
        "utils/ChainlinkMockForTest.sol",
        "utils/ERC20Mock.sol",
        "utils/EUROsMock.sol",
        "utils/PriceCalculator.sol",
        "utils/SmartVaultDeployerV3.sol",
        "utils/SmartVaultIndex.sol",
        "utils/TokenManagerMock.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "RevolutionInvariantTest": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "InvariantTests.t.sol\\RevolutionInvariantTest.json"
        }
      }
    },
    "test/foundry/LiquidationPool.t.sol": {
      "lastModificationDate": 1703977822970,
      "contentHash": "d41d8cd98f00b204e9800998ecf8427e",
      "sourceName": "test/foundry/LiquidationPool.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "LiquidationPool.t": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "LiquidationPool.t.sol\\LiquidationPool.t.json"
        }
      }
    },
    "test/foundry/LiquidationPoolManager.t.sol": {
      "lastModificationDate": 1703977842658,
      "contentHash": "d41d8cd98f00b204e9800998ecf8427e",
      "sourceName": "test/foundry/LiquidationPoolManager.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "LiquidationPoolManager.t": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "LiquidationPoolManager.t.sol\\LiquidationPoolManager.t.json"
        }
      }
    },
    "test/foundry/SmartVaultManager.t.sol": {
      "lastModificationDate": 1703977867419,
      "contentHash": "d41d8cd98f00b204e9800998ecf8427e",
      "sourceName": "test/foundry/SmartVaultManager.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "SmartVaultManager.t": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SmartVaultManager.t.sol\\SmartVaultManager.t.json"
        }
      }
    },
    "test/foundry/SmartVaultTest.t.sol": {
      "lastModificationDate": 1704326868325,
      "contentHash": "c71fb23f04e9480b41b44a9b18c158da",
      "sourceName": "test/foundry/SmartVaultTest.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\LiquidationPool.sol",
        "contracts\\LiquidationPoolManager.sol",
        "contracts\\MockSmartVaultManagerV5.sol",
        "contracts\\SmartVaultV3.sol",
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\ILiquidationPool.sol",
        "contracts\\interfaces\\ILiquidationPoolManager.sol",
        "contracts\\interfaces\\INFTMetadataGenerator.sol",
        "contracts\\interfaces\\IPriceCalculator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultDeployer.sol",
        "contracts\\interfaces\\ISmartVaultIndex.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ISmartVaultManagerV3.sol",
        "contracts\\interfaces\\ISwapRouter.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "contracts\\interfaces\\IWETH.sol",
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src\\Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src\\StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src\\StdUtils.sol",
        "lib/forge-std/src\\Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src\\console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
        "test/foundry\\Handler.t.sol",
        "test/foundry\\TSBuilder.t.sol",
        "test/foundry\\interfaces\\AggregatorV3InterfaceForTest.sol",
        "test/foundry\\interfaces\\IERC20Mock.sol",
        "test/foundry\\interfaces\\ILiquidationPool.sol",
        "test/foundry\\interfaces\\ILiquidationPoolManager.sol",
        "test/foundry\\interfaces\\ISmartVault.sol",
        "test/foundry\\interfaces\\ISmartVaultManagerV5.sol",
        "utils/ChainlinkMockForTest.sol",
        "utils/ERC20Mock.sol",
        "utils/EUROsMock.sol",
        "utils/PriceCalculator.sol",
        "utils/SmartVaultDeployerV3.sol",
        "utils/SmartVaultIndex.sol",
        "utils/TokenManagerMock.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "SmartVaultTest": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SmartVaultTest.t.sol\\SmartVaultTest.json"
        }
      }
    },
    "test/foundry/TSBuilder.t.sol": {
      "lastModificationDate": 1704296860260,
      "contentHash": "09c4d09ca95f125d3ef9f62f45a174e8",
      "sourceName": "test/foundry/TSBuilder.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\LiquidationPool.sol",
        "contracts\\LiquidationPoolManager.sol",
        "contracts\\MockSmartVaultManagerV5.sol",
        "contracts\\SmartVaultV3.sol",
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\ILiquidationPool.sol",
        "contracts\\interfaces\\ILiquidationPoolManager.sol",
        "contracts\\interfaces\\INFTMetadataGenerator.sol",
        "contracts\\interfaces\\IPriceCalculator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultDeployer.sol",
        "contracts\\interfaces\\ISmartVaultIndex.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ISmartVaultManagerV3.sol",
        "contracts\\interfaces\\ISwapRouter.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "contracts\\interfaces\\IWETH.sol",
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src\\Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src\\StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src\\StdUtils.sol",
        "lib/forge-std/src\\Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src\\console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
        "test/foundry\\interfaces\\AggregatorV3InterfaceForTest.sol",
        "test/foundry\\interfaces\\IERC20Mock.sol",
        "test/foundry\\interfaces\\ILiquidationPool.sol",
        "test/foundry\\interfaces\\ILiquidationPoolManager.sol",
        "test/foundry\\interfaces\\ISmartVault.sol",
        "test/foundry\\interfaces\\ISmartVaultManagerV5.sol",
        "utils/ChainlinkMockForTest.sol",
        "utils/ERC20Mock.sol",
        "utils/EUROsMock.sol",
        "utils/PriceCalculator.sol",
        "utils/SmartVaultDeployerV3.sol",
        "utils/SmartVaultIndex.sol",
        "utils/TokenManagerMock.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "TSBuilder": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "TSBuilder.t.sol\\TSBuilder.json"
        }
      }
    },
    "test/foundry/interfaces/AggregatorV3InterfaceForTest.sol": {
      "lastModificationDate": 1704024807927,
      "contentHash": "7c79469bb34c87d2a7fba70894d42ce5",
      "sourceName": "test/foundry/interfaces/AggregatorV3InterfaceForTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AggregatorV3InterfaceForTest": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "AggregatorV3InterfaceForTest.sol\\AggregatorV3InterfaceForTest.json"
        }
      }
    },
    "test/foundry/interfaces/IERC20Mock.sol": {
      "lastModificationDate": 1704207097958,
      "contentHash": "0fbaabae1f0be58d2ca9c895df2302b5",
      "sourceName": "test/foundry/interfaces/IERC20Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Mock": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "IERC20Mock.sol\\IERC20Mock.json"
        }
      }
    },
    "test/foundry/interfaces/ILiquidationPool.sol": {
      "lastModificationDate": 1704031249006,
      "contentHash": "92a68c1004656154d284de4d6080c01d",
      "sourceName": "test/foundry/interfaces/ILiquidationPool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ITokenManager.sol",
        "test/foundry\\interfaces\\ILiquidationPoolManager.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "ILiquidationPool": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ILiquidationPool.sol\\ILiquidationPool.json"
        }
      }
    },
    "test/foundry/interfaces/ILiquidationPoolManager.sol": {
      "lastModificationDate": 1704031167214,
      "contentHash": "1b17c072376e9b8a38a07785fc8caa1b",
      "sourceName": "test/foundry/interfaces/ILiquidationPoolManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ITokenManager.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "ILiquidationPoolManager": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "interfaces\\ILiquidationPoolManager.sol\\ILiquidationPoolManager.json"
        }
      }
    },
    "test/foundry/interfaces/ISmartVault.sol": {
      "lastModificationDate": 1704036082621,
      "contentHash": "04688a76ec9dc4896559dbcc1e59a8d8",
      "sourceName": "test/foundry/interfaces/ISmartVault.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ITokenManager.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "ISmartVault": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "interfaces\\ISmartVault.sol\\ISmartVault.json"
        }
      }
    },
    "test/foundry/interfaces/ISmartVaultManagerV5.sol": {
      "lastModificationDate": 1704150056976,
      "contentHash": "cc04a3aa531584b40003b2ae875468d2",
      "sourceName": "test/foundry/interfaces/ISmartVaultManagerV5.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "ISmartVaultManagerV5": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ISmartVaultManagerV5.sol\\ISmartVaultManagerV5.json"
        }
      }
    },
    "utils/ChainlinkMockForTest.sol": {
      "lastModificationDate": 1704058970469,
      "contentHash": "6830a346783d32fc28ab67ced09623e5",
      "sourceName": "utils/ChainlinkMockForTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ChainlinkMockForTest": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ChainlinkMockForTest.sol\\ChainlinkMockForTest.json"
        }
      }
    },
    "utils/ERC20Mock.sol": {
      "lastModificationDate": 1703690163987,
      "contentHash": "e81bebebd20bd9d99f308d4d12aee67a",
      "sourceName": "utils/ERC20Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "ERC20Mock": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "ERC20Mock.sol\\ERC20Mock.json"
        }
      }
    },
    "utils/EUROsMock.sol": {
      "lastModificationDate": 1703690163987,
      "contentHash": "48a16a6801f1df447fc44e1848184911",
      "sourceName": "utils/EUROsMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\IEUROs.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "EUROsMock": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "EUROsMock.sol\\EUROsMock.json"
        }
      }
    },
    "utils/PriceCalculator.sol": {
      "lastModificationDate": 1704209190591,
      "contentHash": "5650a5a14af4eb90fdcd65ec9d564557",
      "sourceName": "utils/PriceCalculator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\IPriceCalculator.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "test/foundry\\interfaces\\AggregatorV3InterfaceForTest.sol",
        "test/foundry\\interfaces\\IERC20Mock.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "PriceCalculator": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "PriceCalculator.sol\\PriceCalculator.json"
        }
      }
    },
    "utils/SmartVaultDeployerV3.sol": {
      "lastModificationDate": 1704151872870,
      "contentHash": "c8369924523ebd40d871792663fdb362",
      "sourceName": "utils/SmartVaultDeployerV3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\SmartVaultV3.sol",
        "contracts\\interfaces\\IEUROs.sol",
        "contracts\\interfaces\\IPriceCalculator.sol",
        "contracts\\interfaces\\ISmartVault.sol",
        "contracts\\interfaces\\ISmartVaultDeployer.sol",
        "contracts\\interfaces\\ISmartVaultManager.sol",
        "contracts\\interfaces\\ISmartVaultManagerV2.sol",
        "contracts\\interfaces\\ISmartVaultManagerV3.sol",
        "contracts\\interfaces\\ISwapRouter.sol",
        "contracts\\interfaces\\ITokenManager.sol",
        "contracts\\interfaces\\IWETH.sol",
        "node_modules/@openzeppelin\\contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "test/foundry\\interfaces\\AggregatorV3InterfaceForTest.sol",
        "test/foundry\\interfaces\\IERC20Mock.sol",
        "utils/PriceCalculator.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "SmartVaultDeployerV3": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SmartVaultDeployerV3.sol\\SmartVaultDeployerV3.json"
        }
      }
    },
    "utils/SmartVaultIndex.sol": {
      "lastModificationDate": 1704161804726,
      "contentHash": "d8c4f4010ed024a8c9aaa6a0bef987e0",
      "sourceName": "utils/SmartVaultIndex.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ISmartVaultIndex.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "SmartVaultIndex": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "SmartVaultIndex.sol\\SmartVaultIndex.json"
        }
      }
    },
    "utils/TokenManagerMock.sol": {
      "lastModificationDate": 1704207187692,
      "contentHash": "70b74d83501b3372dff280b4b8b1de7a",
      "sourceName": "utils/TokenManagerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "contracts\\interfaces\\ITokenManager.sol",
        "node_modules/@chainlink\\contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "test/foundry\\interfaces\\IERC20Mock.sol"
      ],
      "versionRequirement": "=0.8.17",
      "artifacts": {
        "TokenManagerMock": {
          "0.8.17+commit.8df45f5f.Windows.msvc": "TokenManagerMock.sol\\TokenManagerMock.json"
        }
      }
    }
  }
}